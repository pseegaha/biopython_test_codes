#print "Using the codon dictionaries, translate  the following nucleotide string:'ATGGCGACTGTCGAACCGGAAACCACCCCTACTCCTAATCCCCCGACTACAGAAGAGGAGAAAACGGAATCTAATCAGGAGGTTGCTAACCCAGAACACTATATTAAACATCCCCTACAGAACAGATGGGCACTCTGGTTTTTTAAAAATGATAAAAGCAAAACTTGGCAAGCAAACCTGCGGCTGATCTCCAAGTTTGATACTGTTGAAGACTTTTGGGCTCTGTACAACCATATCCAGTTGTCTAGTAATTTAATGCCTGGCTGTGACTACTC ACTTTTTAAGGATGGTATTGAGCCTATGTGGGAAGATGAGAAAAACAAACGGGGAGGACGATGGCTAATTACATTGAACAAACAGCAGAGACGAAGTGACCTCGATCGCTTTTGGCTAGAGACACTTCTGTGCCTTATTGGAGAATCTTTTGATGACTACAGTGATGATGTATGTGGCGCTGTTGTTAATGTTAGAGCTAAAGGTGATAAGATAGCAATATGGACTACTGAATGTGAAAACAGAGAAGCTGTTACACATATAGGGAGGGTATACAAGGAAAGGTTAGGACTTCCTCCAAAGATAGTGATTGGTTATCAGTCCCACGCAGACACAGCTACTAAGAGCGGCTCCACCACTAAAAATAGGTTTGTTGTTTAA'into a protein sequence using single-letter amino acid alphabet."

coding = {'ATT':'I', 'ATC':'I', 'ATA':'I','CTT':'L', 'CTC':'L', 'CTA':'L', 'CTG':'L', 'TTA':'L', 'TTG':'L','GTT':'V', 'GTC':'V', 'GTA':'V', 'GTG':'V','TTT':'F', 'TTC':'F','ATG':'M','TGT':'C', 'TGC':'C','GCT':'A', 'GCC':'A', 'GCA':'A', 'GCG':'A','GGT':'G', 'GGC':'G', 'GGA':'G', 'GGG':'G','CCT':'P', 'CCC':'P', 'CCA':'P', 'CCG':'P','ACT':'T', 'ACC':'T', 'ACA':'T', 'ACG':'T','TCT':'S', 'TCC':'S', 'TCA':'S', 'TCG':'S', 'AGT':'S', 'AGC':'S','TAT':'Y', 'TAC':'Y','TGG':'W','CAA':'Q', 'CAG':'Q','AAT':'N', 'AAC':'N','CAT':'H', 'CAC':'H','GAA':'E', 'GAG':'E','GAT':'D', 'GAC':'D','AAA':'K', 'AAG':'K','CGT':'R', 'CGC':'R', 'CGA':'R', 'CGG':'R', 'AGA':'R', 'AGG':'R','TAA':'.', 'TAG':'.', 'TGA':'.'}
seq = "ATGGCGACTGTCGAACCGGAAACCACCCCTACTCCTAATCCCCCGACTACAGAAGAGGAGAAAACGGAATCTAATCAGGAGGTTGCTAACCCAGAACACTATATTAAACATCCCCTACAGAACAGATGGGCACTCTGGTTTTTTAAAAATGATAAAAGCAAAACTTGGCAAGCAAACCTGCGGCTGATCTCCAAGTTTGATACTGTTGAAGACTTTTGGGCTCTGTACAACCATATCCAGTTGTCTAGTAATTTAATGCCTGGCTGTGACTACTC ACTTTTTAAGGATGGTATTGAGCCTATGTGGGAAGATGAGAAAAACAAACGGGGAGGACGATGGCTAATTACATTGAACAAACAGCAGAGACGAAGTGACCTCGATCGCTTTTGGCTAGAGACACTTCTGTGCCTTATTGGAGAATCTTTTGATGACTACAGTGATGATGTATGTGGCGCTGTTGTTAATGTTAGAGCTAAAGGTGATAAGATAGCAATATGGACTACTGAATGTGAAAACAGAGAAGCTGTTACACATATAGGGAGGGTATACAAGGAAAGGTTAGGACTTCCTCCAAAGATAGTGATTGGTTATCAGTCCCACGCAGACACAGCTACTAAGAGCGGCTCCACCACTAAAAATAGGTTTGTTGTTTAA"
list=[]
for k in range (0, len(seq)/3):
 codons=seq[k*3:k*3+3]
 print codons
 for k in codons:
     for keys,values in coding.items():
         codons.append(coding.values())
print 'The protein version of the given DNA sequence is as follows:'
print cos
 
print 'The given dna sequence is split in triplets as'
print(list)

list2 = []
coding = {'ATT':'I', 'ATC':'I', 'ATA':'I','CTT':'L', 'CTC':'L', 'CTA':'L', 'CTG':'L', 'TTA':'L', 'TTG':'L','GTT':'V', 'GTC':'V', 'GTA':'V', 'GTG':'V','TTT':'F', 'TTC':'F','ATG':'M','TGT':'C', 'TGC':'C','GCT':'A', 'GCC':'A', 'GCA':'A', 'GCG':'A','GGT':'G', 'GGC':'G', 'GGA':'G', 'GGG':'G','CCT':'P', 'CCC':'P', 'CCA':'P', 'CCG':'P','ACT':'T', 'ACC':'T', 'ACA':'T', 'ACG':'T','TCT':'S', 'TCC':'S', 'TCA':'S', 'TCG':'S', 'AGT':'S', 'AGC':'S','TAT':'Y', 'TAC':'Y','TGG':'W','CAA':'Q', 'CAG':'Q','AAT':'N', 'AAC':'N','CAT':'H', 'CAC':'H','GAA':'E', 'GAG':'E','GAT':'D', 'GAC':'D','AAA':'K', 'AAG':'K','CGT':'R', 'CGC':'R', 'CGA':'R', 'CGG':'R', 'AGA':'R', 'AGG':'R','TAA':'.', 'TAG':'.', 'TGA':'.'}
for keys,values in coding.items():
    print keys,":",values

